import _defineProperty from '@babel/runtime/helpers/defineProperty';
import Point from '../../BaseBuilder/models/Point.js';

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }
class GarminPoint extends Point {
  /**
   * Extended garmin point.
   *
   * @see https://www8.garmin.com/xmlschemas/TrackPointExtensionv2.xsd
   */
  // eslint-disable-next-line complexity
  constructor(lat, lon, options = {}) {
    super(lat, lon, options);
    const {
      hr,
      cad,
      speed,
      atemp,
      wtemp,
      depth,
      course,
      bearing
    } = options;
    const extensionPrefix = 'gpxtpx';
    const trackPointExtension = `${extensionPrefix}:TrackPointExtension`;

    const data = _objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread({}, hr ? {
      [`${extensionPrefix}:hr`]: hr
    } : {}), cad ? {
      [`${extensionPrefix}:cad`]: cad
    } : {}), speed ? {
      [`${extensionPrefix}:speed`]: speed
    } : {}), atemp ? {
      [`${extensionPrefix}:atemp`]: atemp
    } : {}), wtemp ? {
      [`${extensionPrefix}:wtemp`]: wtemp
    } : {}), depth ? {
      [`${extensionPrefix}:depth`]: depth
    } : {}), course ? {
      [`${extensionPrefix}:course`]: course
    } : {}), bearing ? {
      [`${extensionPrefix}:bearing`]: bearing
    } : {});

    this.extensions = _objectSpread(_objectSpread({}, this.extensions), Object.keys(data).length > 0 ? {
      [trackPointExtension]: data
    } : {});
  }

}

export { GarminPoint as default };
