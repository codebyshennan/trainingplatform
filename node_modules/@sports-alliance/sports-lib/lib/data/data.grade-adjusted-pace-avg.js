"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.DataGradeAdjustedPaceAvgMinutesPerMile = exports.DataGradeAdjustedPaceAvg = void 0;
var data_grade_adjusted_pace_1 = require("./data.grade-adjusted-pace");
var DataGradeAdjustedPaceAvg = /** @class */ (function (_super) {
    __extends(DataGradeAdjustedPaceAvg, _super);
    function DataGradeAdjustedPaceAvg() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    DataGradeAdjustedPaceAvg.type = 'Average Grade Adjusted Pace';
    return DataGradeAdjustedPaceAvg;
}(data_grade_adjusted_pace_1.DataGradeAdjustedPace));
exports.DataGradeAdjustedPaceAvg = DataGradeAdjustedPaceAvg;
var DataGradeAdjustedPaceAvgMinutesPerMile = /** @class */ (function (_super) {
    __extends(DataGradeAdjustedPaceAvgMinutesPerMile, _super);
    function DataGradeAdjustedPaceAvgMinutesPerMile() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    DataGradeAdjustedPaceAvgMinutesPerMile.prototype.getValue = function (formatForDataType) {
        if (formatForDataType) {
            throw new Error("Not implemented");
        }
        return _super.prototype.getValue.call(this, formatForDataType);
    };
    DataGradeAdjustedPaceAvgMinutesPerMile.type = 'Average Grade Adjusted Pace in minutes per mile';
    DataGradeAdjustedPaceAvgMinutesPerMile.displayType = DataGradeAdjustedPaceAvg.type;
    DataGradeAdjustedPaceAvgMinutesPerMile.unit = 'min/m';
    return DataGradeAdjustedPaceAvgMinutesPerMile;
}(data_grade_adjusted_pace_1.DataGradeAdjustedPaceMinutesPerMile));
exports.DataGradeAdjustedPaceAvgMinutesPerMile = DataGradeAdjustedPaceAvgMinutesPerMile;
