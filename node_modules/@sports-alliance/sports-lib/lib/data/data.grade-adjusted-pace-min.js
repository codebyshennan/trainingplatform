"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.DataGradeAdjustedPaceMinMinutesPerMile = exports.DataGradeAdjustedPaceMin = void 0;
var data_grade_adjusted_pace_1 = require("./data.grade-adjusted-pace");
var DataGradeAdjustedPaceMin = /** @class */ (function (_super) {
    __extends(DataGradeAdjustedPaceMin, _super);
    function DataGradeAdjustedPaceMin() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    DataGradeAdjustedPaceMin.type = 'Minimum Grade Adjusted Pace';
    return DataGradeAdjustedPaceMin;
}(data_grade_adjusted_pace_1.DataGradeAdjustedPace));
exports.DataGradeAdjustedPaceMin = DataGradeAdjustedPaceMin;
var DataGradeAdjustedPaceMinMinutesPerMile = /** @class */ (function (_super) {
    __extends(DataGradeAdjustedPaceMinMinutesPerMile, _super);
    function DataGradeAdjustedPaceMinMinutesPerMile() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    DataGradeAdjustedPaceMinMinutesPerMile.prototype.getValue = function (formatForDataType) {
        if (formatForDataType) {
            throw new Error("Not implemented");
        }
        return _super.prototype.getValue.call(this, formatForDataType);
    };
    DataGradeAdjustedPaceMinMinutesPerMile.type = 'Minimum Grade Adjusted pace in minutes per mile';
    DataGradeAdjustedPaceMinMinutesPerMile.displayType = DataGradeAdjustedPaceMin.type;
    DataGradeAdjustedPaceMinMinutesPerMile.unit = 'min/m';
    return DataGradeAdjustedPaceMinMinutesPerMile;
}(data_grade_adjusted_pace_1.DataGradeAdjustedPaceMinutesPerMile));
exports.DataGradeAdjustedPaceMinMinutesPerMile = DataGradeAdjustedPaceMinMinutesPerMile;
