<%- include('header', {index: `${data.index}`, title: `${data.title}`}) -%>

<script src="https://unpkg.com/ag-grid-enterprise/dist/ag-grid-enterprise.min.noStyle.js"></script>
  <link rel="stylesheet" href="https://unpkg.com/ag-grid-community/dist/styles/ag-grid.css">
  <link rel="stylesheet" href="https://unpkg.com/ag-grid-community/dist/styles/ag-theme-alpine.css">
</head>
<body>

    <div id="myGrid" class="ag-theme-alpine" style="height:80%"></div>

  

  <script type="text/javascript" charset="utf-8">
       // specify the columns
       const columnDefs = [
          { field: "title"},
          { field: "activitytype", rowGroup: true },
          { field: "date"},
          { field: "time"},
          { field: "distance" },
          { field: "calories" },
          { field: "timetaken" },
          { field: "avghr" },
          { field: "maxhr" },
          { field: "createdon" }
       ];
       
       const autoGroupColumnDef = {
           headerName: "Activity Type",
           field: "activitytype",
           cellRenderer:'agGroupCellRenderer',
           cellRendererParams: {
               checkbox: true
           }
       }
       
       // let the grid know which columns and what data to use
       const gridOptions = {
           columnDefs: columnDefs,
           autoGroupColumnDef: autoGroupColumnDef,
           groupSelectsChildren: true,
           rowSelection: 'multiple'
       };
       
       // lookup the container we want the Grid to use
       const eGridDiv = document.querySelector('#myGrid');
       
       // create the grid passing in the div to use together with the columns & data we want to use
       new agGrid.Grid(eGridDiv, gridOptions);

       gridOptions.api.setRowData(<%- JSON.stringify(data.result) %>);
       
      
       
      //  agGrid.simpleHttpRequest({url: 'https://www.ag-grid.com/example-assets/row-data.json'})
      //      .then(data => {
      //         gridOptions.api.setRowData(data);
      //      });
  </script>
</body>